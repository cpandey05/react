 //only http work from avaya network and https does not work
 
 baseURL: "http://api.thecatapi.com/v1",
  headers: {
    "x-api-key": "aab3c1d5-36f6-4f00-871a-493fe5bae541",
  },
 try {
      const response = await yelp.get("/breeds", {
        params: { limit: 10 },
      });
      
       console.log(response.data);
            console.log(response.data);
      setResults(response.data);

spelling mistakes are number one , caused a lot of trouble
where to put curly braces and where not .. in jsx element to print the value we need the curly braces but the same the fuction does not need one and this was causing whole api to fail ... 
--so when we are referencing some javasctipt variable inside a jsx, then we need to put curly braces but in side javascript functions i do not think this is needed... 

in JSX if we are setting value of a prop to true then we can simply use the name of the variable .. no need to set the true value explicitly.

by default elements try to collapse them .. what does this mean , when we tried adding the image element it was not visible at all unless we added height and weidth property

adding margin left is cutting off the text by the margin amount as side effect -this when adding margin at the parent container level, for example, for the search screen .. but it works fine if we add the
margin to one of the child element like the result set element.. 

Scroll bar is controlled by the flat list element ..

if the elements need to be scrollable, they need to be inside scroll view ... by default the list of photos were not scrollable, they just used to cut off towards the end of the screen .. 

by default the view element can take up much more space than the screen to accomodate the children..this can be verified bu putting a border around it and add some color to it .. and increase the height of images
or add some more rows to it .. the view will keep expanding..

flex element of stylesheet can be used to tell the element not to expand the view rather use only the available amount

understand <View> vs <> .. later one is a conveinient option where child elements are stretching to occupy more space than available or if a absence of a child element is causing a shrink


double curly braces are needed in a jsx -first one to tell that there is some javascript element and second one for the actual evaluation of the expression.. 

So to navigate from the child to the detail page ..one way is to pass down the navigation object all the way down to the child and then call function on navigate to do stuff.. 

when multiple element need to returned from a component then return shoul wrap it in brackets and it should not use semi colon on individual lines.. 

to work with the navigation directly, we need to wrap the child element in 'withreactNavigation' -this will give access to navigation object inside the child which has been wrapped .. 




 baseURL: "https://api.yelp.com/v3/businesses",
  headers: {
    Authorization:
      "Bearer zIPVO-WQ7O9zJFgTRrTCGXz4jLSwWAcz3lwOSo208Jq2MrC92FW3i34DkmkgtvVAGZzTak0v2oz7O0mkw_BcuFZi0Hh2BM9c12EKQ1dgeVfAFhbHO7y1EMCjXcBDYHYx",
  },


const response = await yelp.get("/search", {
        params: { limit: 20, term: passedSearchTerm, location: "san jose" },
      });
      
       console.log(response.data.businesses.length);
            console.log(response.data.businesses);
      setResults(response.data.businesses);